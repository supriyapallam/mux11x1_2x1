//Design Code
module mux21(output out,input s1,in0,in1);
  assign out=s1?in1:in0;
endmodule

module mux11x1(output out,input s3,s2,s1,s0,i0,i1,i2,i3,i4,i5,i6,i7,i8,i9,i10);
  wire o1,o2,o3,o4,o5,o6,o7,o8,o9;
  mux21 a1(o1,s0,io,i1);
  mux21 a2(o2,s0,i2,i3);
  mux21 a3(o3,s0,i4,i5);
  mux21 a4(o4,s0,i6,i7);
  mux21 a5(o5,s0,i8,i9);
  mux21 a6(o6,s1,o1,o2);
  mux21 a7(o7,s1,o3,o4);
  mux21 a8(o8,s1,o5,i10);
  mux21 a9(o9,s2,o6,o7);
  mux21 a10(out,s3,o9,o8);
endmodule

  //Test Bench Code
  module test();
  reg s3,s2,s1,s0,i0,i1,i2,i3,i4,i5,i6,i7,i8,i9,i10;
  wire out;
  integer i;
  mux11x1 DUT(out,s3,s2,s1,s0,i0,i1,i2,i3,i4,i5,i6,i7,i8,i9,i10);
  initial
    begin
      for(i=0;i<32768;i=i+1)
        begin
          {s3,s2,s1,s0,i0,i1,i2,i3,i4,i5,i6,i7,i8,i9,i10}=i;
          #3;
        end
      $finish;
    end
  initial
    begin
      $dumpfile("test.vcd");
      $dumpvars(1);
    end
  initial
    begin
      $monitor("time=%0t,s3=%b,s2=%b,s1=%b,s0=%b,i0=%b,i1=%b,i2=%b,i3=%b,i4=%b,i5=%b,i6=%b,i7=%b,i8=%b,i9=%b,i10=%b,out=%b",$time,s3,s2,s1,s0,i0,i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,out);
    end
endmodule

